@model Spark.Models.arguments

@using (Html.BeginForm("CreateArgument", "Spark", FormMethod.Post, new { @id = "CreateArgumentForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>arguments</legend>

        <div class="argumentCreateSparkIt" id="TransitionElement0">
            <div class="editor-field">
                <h1 style="text-align:center; margin-bottom:20px;">Spark interest.</h1>
                <div class="inputContainer">
                    <div class="inputText">Spark It</div>
                    @Html.TextAreaFor(model => model.strConclusion, new { @id = "editorConclusion", @placeholder = "Write your spark here...", @class = "textAreaNormal" })
                    @Html.ValidationMessageFor(model => model.strConclusion)
                </div>
            </div>
        </div>

        <div class="argumentCreateArgument" id="TransitionElement1">
            <h1>Build your argument. Be creative.</h1>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.strArgument, new { @id = "editorArgument", @class = "textAreaEditor" })
                @Html.ValidationMessageFor(model => model.strArgument)
            </div>
        </div>

        <div class="argumentCreateCitations" id="TransitionElement2">
            <h1>Cite sources to verify your claims.</h1>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.strCitations, new { @id = "editorCitations", @class = "textAreaEditor" })
                @Html.ValidationMessageFor(model => model.strCitations)
            </div>
        </div>

        <div class="argumentCreateReview" id="TransitionElement3">
            <h1 id="testing">Review your work</h1>
            <textarea id="editorReview" class="txtAreaReview"></textarea>
            <input type="button" onclick="SubmitForm()" value="Create" style="margin-left:40%;" />
        </div>

        <div class="buttonPrevious" onclick="SingleTransition(false)">Previous</div>
        <div class="buttonNext" onclick="SingleTransition(true); UpdateReview()">Next</div>

         <div class="navigationControlView">
            <ol class="progtrckr" data-progtrckr-steps="5">
                <li class="progtrckr-todo">Spark It</li><!--
             --><li class="progtrckr-todo">Argument</li><!--
             --><li class="progtrckr-todo">Citations</li><!--
             --><li class="progtrckr-todo">Preview</li><!--
             -->
            </ol>
         </div>


        @*Hidden Elements*@
        <div class="editor-field" hidden="hidden">
            @Html.EditorFor(model => model.FKAccounts)
        </div>
        <div class="editor-field" hidden="hidden">
            @Html.EditorFor(model => model.FKSparks)
        </div>
        <div class="editor-field" hidden="hidden">
            @Html.EditorFor(model => model.bIsAgree)
        </div>

        
    </fieldset>
}

<script type="text/javascript">

    InitializeMaxIndex(3);

    tinymce.init({
        //invalid_elements: "img",
        height: "500",
        width: 775,
        resize: false,
        browser_spellcheck: true,
        content_css: "/Content/TinyMCEDefault.css",
        selector: "textarea.textAreaEditor",
        plugins: "image, textcolor, wordcount",
        toolbar: "insertfile undo redo | styleselect | bold italic forecolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
    });

    tinymce.init({
        height: "500",
        width: 775,
        resize: false,
        readonly: 1,
        content_css: "/Content/TinyMCEDefault.css",
        selector: "textarea.txtAreaReview",
        plugins: "",
        menubar: "false",
        statusbar: "false",
        toolbar: "false"
    });

    function UpdateReview()
    {
        var conclusion = "<h2 style=\"text-align:center\">Spark</h2> <br>" + $('#editorConclusion').val();
        var argument = "<h2 style=\"text-align:center\">Argument</h2> <br>" + tinyMCE.get('editorArgument').getContent({ format: 'html' });
        var citations = "<h2 style=\"text-align:center\">Citations</h2> <br>" + tinyMCE.get('editorCitations').getContent({ format: 'html' });

        //$('#previewHTML').html(conclusion + "<br>" + argument + "<br>" + citations);
        tinyMCE.get('editorReview').setContent(conclusion + "<br>" + argument + "<br>" + citations);
    }

    function SubmitForm()
    {
        //Make sure the required fields have been filled with at least one character.
        if ($('#editorConclusion').val() == "" || tinyMCE.get('editorArgument').getContent() == "")
        {
            alert("You must fill out the spark it and argument section before submitting");
            return;
        }

        $("#CreateArgumentForm").submit();
    }

</script>