@model Spark.Models.SparkArgumentModel

<div class="sparkArgumentPreviewExpanded">
    <div class="sparkArgumentInsideContainerExpanded" style="margin-left:20%; width:775px;">
        <div class="sparkArgumentPreviewTitleLineExpanded" style="width:775px;">
            <div class="sparkExpandedSpark">
                <img src="~/Images/Icons/SparkIcon1.png" alt="Spark" height="20" width="20" />
            </div>
            <div class="sparkUsernameExpanded">
                @Model.strUserName
            </div>
            <div class="sparkInfluenceScoreExpanded">
                Influence: 150
            </div>
            <div class="sparkDownvoteExpanded">
                -# 145
            </div>
            <div class="sparkUpvoteExpanded">
                +# 190
            </div>
            <div class="sparkCommentsCountExpanded">
                Comment # 123
            </div>
        </div>
        
        <textarea id="editorReview" class="txtAreaReview">
            @(new HtmlString("<h2 style=\"text-align:center\">Spark</h2> <br>"))      @Model.strConclusion 
            @(new HtmlString("<h2 style=\"text-align:center\">Argument</h2> <br>"))   @Model.strArgument 
            @(new HtmlString("<h2 style=\"text-align:center\">Citations</h2> <br>"))  @Model.strCitations
        </textarea>
       
        <div class="sparkArgumentFooter">
            <div class="sparkAddCommentExpanded">
                <button class="button" id="btnAddComment" onclick="addComment()">Add Comment</button>
                <div id="sparkArgumentAddComment">
                    <textarea id="editor1" class="commentEditor" name="editor1" rows="10" cols="80">Write your comment here...</textarea>
                    <input type="button" value="Submit" />
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    tinymce.init({
        invalid_elements: "img",
        width: 760,
        height: 300,
        resize: false,
        browser_spellcheck: true,
        content_css: "/Content/TinyMCEDefault.css",
        selector: "textarea.commentEditor"
    });

    //Initialize the editor for review
    tinymce.init({
        width: 775,
        resize: false,
        readonly: 1,
        content_css: "/Content/TinyMCEDefault.css",
        selector: "textarea.txtAreaReview",
        plugins: "autoresize",
        init_instance_callback: function (inst) { inst.execCommand('mceAutoResize'); },
        menubar: "false",
        statusbar: "false",
        toolbar: "false"
    });
   
</script>