@model Spark.Models.sparks

<p class="title" hidden="hidden">Spark</p>

@Styles.Render("~/Content/SparkContainer.css")
@Styles.Render("~/Content/SparkArgumentFull.css")
@Scripts.Render("~/Scripts/ArgumentExpansion.js")

<div class="sparkTopicLine">
    <div class="sparkAgree">
        @Html.ActionLink("Agree", "CreateArgument", "Spark", new { bAgree = true, nSparkID = @Model.PK }, new { @id = "buttonAgree" })
    </div>

    <div class="sparkTopic">
        <p>@Model.strTopic</p>
    </div>

    <div class="sparkDisagree">
        @Html.ActionLink("Disagree", "CreateArgument", "Spark", new { bAgree = false, nSparkID = @Model.PK }, new { @id = "buttonDisagree" })
    </div>

</div>

<div id="ArgumentsContainer">
    <div class="sparkAgreeSide">
        @{
            foreach (Spark.Models.SparkArgumentModel samAgree in ViewBag.Arguments[0])
            {
                @Html.Partial("SparkArgumentAgreePartial", samAgree);
            }
        }
    </div>

    <div class="sparkDivider">
    </div>

    <div class="sparkDisagreeSide">
        @{
            foreach (Spark.Models.SparkArgumentModel samDisagree in ViewBag.Arguments[1])
            {
                @Html.Partial("SparkArgumentDisagreePartial", samDisagree);
            }
        }
    </div>
</div>

<div id="ArgumentCreate">

</div>

<div id="ArgumentView">
    
</div>

