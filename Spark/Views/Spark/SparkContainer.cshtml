@model Spark.Models.sparks

<p class="title" hidden="hidden">Spark</p>

@Styles.Render("~/Content/SparkContainer.css")
@Styles.Render("~/Content/SparkArgumentFull.css")
@Scripts.Render("~/Scripts/ArgumentExpansion.js")

<div class="sparkTopicLine">
    <div class="sparkAgree">
        <a id="buttonAgree" @*href="#modal-text" class="call-modal"*@ title="Clicking this link shows the modal" onclick="addArgument(true, @Model.PK )">Agree</a>
    </div>

    <div class="sparkTopic">
        <p>@Model.strTopic</p>
    </div>

    <div class="sparkDisagree">
        <a id="buttonDisagree" @*href="#modal-text" class="call-modal"*@ title="Clicking this link shows the modal" onclick="addArgument(false, @Model.PK )">Disagree</a>
    </div>

</div>

<div id="ArgumentsContainer">
    <div class="sparkAgreeSide">
        @{
            foreach (Spark.Models.SparkArgumentModel samAgree in ViewBag.Arguments[0])
            {
                @Html.Partial("SparkArgumentAgreePartial", samAgree);
            }
        }
    </div>

    <div class="sparkDivider">
    </div>

    <div class="sparkDisagreeSide">
        @{
            foreach (Spark.Models.SparkArgumentModel samDisagree in ViewBag.Arguments[1])
            {
                @Html.Partial("SparkArgumentDisagreePartial", samDisagree);
            }
        }
    </div>
</div>

@Html.Partial("SparkArgumentCreate", new Spark.Models.arguments());
