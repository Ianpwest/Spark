@model Spark.Models.SparkCreateModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    window.onload = function()
    {
        document.getElementById("SubjectMatterId").selectedIndex = -1;
    }
</script>

<div class="pageBodyDiv">

    <p class="title" hidden="hidden">Spark Create</p>

    @using (Html.BeginForm("SparkCreate", "Spark", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        
        <fieldset>
            <legend>sparks</legend>

            <p id="tester">Tester</p>
            <div style="position:relative; height: 150px; width: 325px; border-width: medium; border-style: solid;">
                <img id="imgPreview" style="position:absolute; width: 100%; height: 100%;" alt=""
                     src="~/content/blankimage.gif" />
            </div>
            <input id="Img" type="file" name="FileUpload1" onchange="readUrl(this);" style="background-color:transparent;" />
            <div class="editor-label">
                @Html.LabelFor(model => model.Topic)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Topic)
                @Html.ValidationMessageFor(model => model.Topic)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.SubjectMatterId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.SubjectMatterId, Model.SubjectMattersAll, new { onchange = "getImage(this)" })
                @Html.ValidationMessageFor(model => model.SubjectMatterId)
            </div>
            <div class="editor-field">
                <label>Tags</label>
            </div>
            <div style=" height: 300px; width:auto;" >

                <table id="tableAvailableTags" style=" float:left; margin-top:0; margin-bottom:0; margin-right:20px; padding:0; width:200px;">
                    <thead>
                        <tr style="display:block;"><td>@Html.TextBox("Header", null, new { @style = "width:200px" })</td></tr>
                    </thead>
                    <tbody style="overflow:auto; display:block; height:200px;">
                        @{
                                foreach (KeyValuePair<int, string> kvp in Model.TagIdAndNames)
                                {
                                        <tr>
                                            <td style="width:75%;" onclick="testCells(this)" id=@String.Concat("availableTag" + kvp.Key)>
                                                @kvp.Value
                                            </td>
                                            <td><img src="@Model.TagIdAndImages[kvp.Key]" height="40" width="40" /></td>
                                        </tr>
                                }
                        }
                    </tbody>
                </table>

                <table id="tableSelectedTags" style=" width:200px;">
                    <thead>
                        <tr><td>Selected Tags</td></tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>

            <div id="divHiddenTags" style="visibility:hidden">0</div>
            
            @Html.HiddenFor(model => model.Tag1)
            @Html.HiddenFor(model => model.Tag2)
            @Html.HiddenFor(model => model.Tag3)
            @Html.HiddenFor(model => model.Tag4)
            @Html.HiddenFor(model => model.Tag5)

            <p style="position:relative;">
                <input type="submit" value="Create" onclick="getSelectedTagsForModel()"/>
            </p>
        </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    function getSelectedTagsForModel()
    {
        var obj = document.getElementById("tableSelectedTags");
        var rows = obj.tBodies[0].rows;
        var arrayTags = new Array();
        for(var i = 0; i < rows.length; i++)
        {
            var name = rows[i].id.substring(10);
            arrayTags[i] = name;
        }

        @{
            Model.TagIdAndImages = new Dictionary<int, string>();
            Model.TagIdAndNames = new Dictionary<int,string>();
          }
        for(var j = 0; i < arrayTags.length; j++)
        {
            @*@Model.TagReturnValues.Add((int)@:arrayTags[j], @string.Empty);*@
        }
    }
</script>
