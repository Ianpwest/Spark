@model Spark.Models.SparkCreateModel

@{
    ViewBag.Title = "SparkCreate";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<h2>SparkCreate</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>sparks</legend>

        <div style="position:relative; height: 150px; width: 325px; border-width: medium; border-style: solid;">
            <img id="imgPreview" style="position:absolute; width: 100%; height: 100%;" alt=""
                            src="../../Content/BlankImage.gif" />
        </div>
        <input id="Img"  type="file" name="FileUpload1" onchange="readUrl(this);" />
        <div class="editor-label">
            @Html.LabelFor(model => model.Topic)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Topic)
            @Html.ValidationMessageFor(model => model.Topic)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubjectMatterId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SubjectMatterId, Model.SubjectMattersAll)
            @Html.ValidationMessageFor(model => model.SubjectMatterId)
        </div>

        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.SubjectMattersAll)

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
